type UserRole = 
 variant {
   Admin;
   Operator;
   SuperAdmin;
 };
type TaskConfig = 
 record {
   maxBandwidthPerDay: nat;
   scanInterval: nat;
   targetSites: vec text;
   topics: vec text;
 };
type Task = 
 record {
   assignedTo: opt principal;
   createdAt: int;
   id: text;
   priority: nat;
   status: text;
   topic: text;
   url: text;
 };
type Result_1 = 
 variant {
   err: text;
   ok: nat;
 };
type Result = 
 variant {
   err: text;
   ok;
 };
service : {
  addTasks: (vec Task) -> (Result_1);
  addUser: (principal, UserRole) -> (Result);
  getConfig: () -> (TaskConfig) query;
  getTasks: (nat) -> (vec Task);
  init: () -> ();
  removeUser: (principal) -> (Result);
  updateConfig: (TaskConfig) -> (Result);
  updateTaskStatus: (text, text) -> (Result);
}
